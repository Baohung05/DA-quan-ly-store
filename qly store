#include <iostream>
#include<string>
#include<vector>
#include<fstream>
#include<time.h>
#include<stdio.h>

using namespace std;

class Product {
private:
	string  tensp, loaisp;
	int soluong;
	float dongia;
	static int msp;
	int id;
public:
	Product(string tensp=" ",string loaisp=" ",int soluong=0,float dongia=0): tensp(tensp),loaisp(loaisp),soluong(soluong),dongia(dongia){}
	friend istream& operator >> (istream& in, Product& product);
	friend ostream& operator << (ostream& out, Product product);

	string get_tensp();
	void tang_msp();
	int get_msp();
	int get_soluong();
	void set_soluong(int);
	void set_tensp(string);
	string get_loaisp();
	float get_dongia();
	void set_dongia(float);
	void set_loaisp(string);
	void set_id(int);
	int get_id();
};
void Product::set_id(int id) {
	this->id = id;
}
int Product::get_id() {
	return id;
}
string Product::get_tensp()
{
	return tensp;
}
int Product::msp = 0;
void Product::tang_msp() {
	++msp;
}
int Product::get_msp() {
	return msp;
}
istream& operator >> (istream& in, Product& product) {
	in.ignore();
	cout << "Nhap loai san pham: ";
	getline(in, product.loaisp);
	cout << "Nhap ten san pham: ";
	getline(in, product.tensp);
	cout << "So Luong: ";
	in >> product.soluong;
	cout << "Don gia: ";
	in >> product.dongia;
	return in;
}
ostream& operator << (ostream& out, Product product) {
	out << product.id << ". " << "Loai san pham: " << product.loaisp << ", " << "Ten san pham: " << product.tensp << ", " << " So luong: " << product.soluong << ", " << "Don gia: " << product.dongia << endl;
	return out;
}
void Product::set_soluong(int soluong) {
	this->soluong = soluong;
}
int Product::get_soluong() {
	return soluong;
}
void Product::set_tensp(string tensp) {
	this->tensp = tensp;
}
void Product::set_loaisp(string loaisp) {
	this->loaisp =loaisp;
}
void Product::set_dongia(float dongia) {
	this->dongia = dongia;
}
string Product::get_loaisp() {
	return loaisp;
}
float Product::get_dongia() {
	return dongia;
}

class Store {
private:
	vector<Product> v;
public:
	void show_menu();
	void show_products();
	void add_products();
	void delete_products();
	void search_product();
	void bill_product();
};



int main()
{
	Store s;
	s.show_menu();

	fstream fs;
	fs.open("D:\\source\\106230048_Bai2\\dssp.txt");
	
	
	return 0;
}



void Store::show_menu() {
	int chose;
	
start:
	system("cls");

	cout << "====== MENU =====" << endl;
	cout << "1. Xem danh sach san pham" << endl;
	cout << "2. Them san pham moi" << endl;
	cout << "3. Xoa san pham" << endl;
	cout << "4. Tim san pham" << endl;
	cout << "5. Hoa don thanh toan" << endl;
	cout << "0. Thoat chuong trinh" << endl;

	cout << "Lua chon cua ban la: ";
	cin >> chose;


	system("cls");

	switch (chose) {
	case 1:
		show_products();
		break;
	case 2:
		add_products();
		break;
	case 3:
		delete_products();
		break;
	case 4:
		search_product();
		break;
	case 5:
		bill_product();
		break;
	case 0:
		cout << "Tam biet !!!" << endl;
		return;
	default:
		cout << "Lua chon khong hop le." << endl;

	}
	cout << "Ban co muon tiep tuc khong?" << endl;
	cout << "Chon 1 neu tiep tuc." << endl;
	cout << "Chon 0 de thoat chuong trinh." << endl;
	bool is_continue;
	cin >> is_continue;

	if (!is_continue) {
		cout << "Tam biet!!!";
		exit;
	}
	goto start;

}
void Store::show_products() {
	if (v.size() == 0) {
		cout << "Chua co san pham." << endl;
		cout << "Vui long nhap san pham." << endl;
	}
	else {
		for (int i = 0; i < v.size(); i++) {
			cout << v[i] << endl;
		}
	}

}

void Store::add_products() {
	Product add_product;
	add_product.tang_msp();
	add_product.set_id(add_product.get_msp());
	cout << "Nhap thong tin san pham muon them. " << endl;
	cin >> add_product;
	v.push_back(add_product);
	cout << "Them san pham thanh cong." << endl;

}

void Store::delete_products() {
	string delete_pr;
	cout << "Nhap san pham muon xoa: ";
	cin.ignore();
	getline(cin, delete_pr);

	int delete_index = -1;
	for (int i = 0; i < v.size(); i++) {
		if (v[i].get_tensp() == delete_pr) {
			v.erase(v.begin() + i);
			break;
		}
	}

	if (delete_index == -1) {
		cout << "Khong tim thay san pham." << endl;
		return;
	}

	cout << "Xoa san pham thanh cong." << endl;
}

void Store::search_product() {
	string search_name;
	cout << "Nhap ten san pham muon tim kiem: ";
	cin.ignore();
	getline(cin, search_name);
	int search_index = -1;

	for (int i = 0; i < v.size(); i++) {
		if (search_name == v[i].get_tensp()) {
			cout << v[i];
			search_index = i;
			break;
		}
	}
	if (search_index == -1) {
		cout << "Khong tim thay san pham." << endl;

	}

}

void Store::bill_product() {
	int sell_msp,sp;
	int sell_sl;
	int spcl;
	int tongtien = 0;
	time_t time_now = time(NULL);
	tm* t = localtime_s(&time_now);

	cout << "Nhap so san pham: ";
	cin >> sp;
	for (int i = 0; i < sp; i++) {
		while (true) {
			cout << "Nhap ma san pham: ";
			cin >> sell_msp;
			cout << "nhap so luong: ";
			cin >> sell_sl;
			if (sp != v[i].get_id()) {
				cout << "San pham khong ton tai" << endl;
			}
			else if (sell_sl > v[i].get_soluong()) {
				cout << "San pham khong du." << endl;
			}
			else {
				spcl = v[i].get_soluong() - sell_sl;
				v[i].set_soluong(spcl);
				break;
			}
		}
	}
	for (int i = 0; i < sp; i++) {
		if (sp = v[i].get_id()) {
			cout << "Ma san pham: " << sell_msp << endl;
			cout << "Ten san pham: " << v[i].get_tensp() << endl;
			cout << "So luong: " << sell_sl << endl;
			cout << "So tien: " << v[i].get_dongia()<<" " << "Thanh tien: " << v[i].get_dongia() * sell_sl << endl;
			tongtien += v[i].get_dongia() * sell_sl;
		}
	}
	cout << "Tong tien thanh toan: " << tongtien << endl;
	cout << t->tm_hour << ":" << t->tm_min << ":" << t->tm_sec;
	cout << t->tm_mday << "/" << t->tm_mon+1 << "/" << t->tm_year+1900;

}
